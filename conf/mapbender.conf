<?php
# Load environment specific constants
require_once ".env.php";

# --------------------------------------------
# type of mapbender database
# --------------------------------------------

define("SYS_DBTYPE", "pgsql");

# --------------------------------------------
# prepared statements (PHP > 5.1.x, PostgreSQL > 7.4)
# --------------------------------------------

define("PREPAREDSTATEMENTS", true);

# --------------------------------------------
# encoding - default characterset UTF-8 / ISO-8859-1
# --------------------------------------------

define("CHARSET", "UTF-8");

# --------------------------------------------
# error_reporting
# --------------------------------------------

#ini_set('error_reporting', 'E_ALL & ~ E_NOTICE');

# --------------------------------------------
# directory for temporary files
# --------------------------------------------

define("TMPDIR", "../tmp");

# --------------------------------------------
# absolute directory for temporary files - for use with external cms
# --------------------------------------------

define("ABSOLUTE_TMPDIR", "/opt/geoportal/mapbender/http/tmp/");
define("LIBGEOTIFF", true);
# --------------------------------------------
# directory for log files
# --------------------------------------------
define("LOG_DIR", dirname(__FILE__) . "/../log/");

# --------------------------------------------
# URL to login
# --------------------------------------------

define("LOGIN", URL_SCHEME . "://" . FULLY_QUALIFIED_DOMAIN_NAME . "/mapbender/frames/login.php");

define("MAXLOGIN", 3);

$login = LOGIN;

# --------------------------------------------
# Definitions for HTTP Authentication
# --------------------------------------------

define('REALM', 'mapbender_registry');

define('NONCEKEY', 'geoportal');

$nonceLife = 300;

define('HTTP_AUTH_PROXY', "https://" . FULLY_QUALIFIED_DOMAIN_NAME . "/http_auth");

define('HTTP_AUTH_PROXY_FORCE_HTTPS', false);

# --------------------------------------------
# type of server-connection
# curl, socket, http
# --------------------------------------------

define("CONNECTION", "curl");
#define("CONNECTION", "http");
#define("CONNECTION", "socket");

# --------------------------------------------
# security: path to modules
# --------------------------------------------

define("CHECK", false);

# --------------------------------------------
# enable/disable portal
# --------------------------------------------

define("PORTAL", false);

# --------------------------------------------
# enable/disable ows metadata overwrite
# If set to false, the edited metadata of the ows will not
# automatically exchanged with the metadata from the server,
# when updating the service. It has to be done with help of
# the metadata editor afterwards
# --------------------------------------------

define("MD_OVERWRITE", false);

# --------------------------------------------
# mail settings for internal mapbender mails 
# smtp mailing
# for further settings check 'class_administration.php'
# please check phpmailer for more information
# --------------------------------------------

$mailHost = MAILHOST;
$mailUsername =  MAILUSERNAME;
$mailPassword =  MAILPASSWORD;

# --------------------------------------------
# wms monitoring
# --------------------------------------------

define("AUTO_UPDATE", "0");
define("TIME_LIMIT", "30");
define("PHP_PATH", "/usr/bin/");

# --------------------------------------------

# Define special TIMEOUT for Capabilities Monitoring in seconds - default is defined in class_connector and is set to 20

# --------------------------------------------

define("CAP_MONITORING_TIMEOUT", "30");

# --------------------------------------------

# Define wait time between start of the single capabilities monitoring scripts. This may be usefull, if many services are on the same server as the monitoring installation. The time defined is given in microseconds - 2000000 is 2 seconds!

# --------------------------------------------

define("CAP_MONITORING_WAITSTATE", "200000");

# --------------------------------------------
# Internationalization
# --------------------------------------------

define("USE_I18N", true);  // requires gettext for PHP. 
// If "false", LANGUAGE is set to english
define("LANGUAGE", "de");   // only available if USE_I18N is "true". 
// "en", "de", "bg", "gr", "nl", "hu", "it", "es","fr","pt"

# --------------------------------------------
# Notify subscribers and gui owners by email
# Mapbender 2.7.4+
# If set to true, all owners of guis where an updated service is used are notified about the update process.
# If a layername changed, this information will be part of the mail too!! It enables an external user to actualize the
# service configuration of his gis client (e.g. reload capabilities).
# --------------------------------------------
define("NOTIFY_ON_UPDATE", true);

# --------------------------------------------
# RSS
# --------------------------------------------
define("GEO_RSS_FILE", "../geoportal/news/georss.xml");


#TWITTER DB UPDATES
define("TWITTER_NEWS", false);
#---------------------------------------------

#TWITTER METADATA
#---------------------------------------------

define("TWITTER_METADATA", false);

#---------------------------------------------
# ANONYMOUS 
#---------------------------------------------
define("ANONYMOUS_USER", "2");
define("ANONYMOUS_GROUP", "22");

define("REGISTRATING_GROUP", "21");


#---------------------------------------------
# METADATA
# This path is defined to allow a saving of iso19139 xml files which are generated by mapbender and metador
# The folder should be owned by the webserver user to allow writing of files which are generated from a php 
# script. The content of the folder may be harvested 
#---------------------------------------------
define("METADATA_DIR", "/opt/geoportal/mapbender/metadata");

#---------------------------------------------
# METADATA CODESPACE
#---------------------------------------------
# This path is used as a default codespace of metadatasets which are administrated thru the simple mapbender layer metadata editor
#---------------------------------------------
define("METADATA_DEFAULT_CODESPACE", URL_SCHEME . "://geoportal.saarland.de");

#---------------------------------------------
# External Validator
#---------------------------------------------
# This is an absolute URL to an external validation service
#---------------------------------------------
define("INSPIRE_VALIDATOR_URL", "http://inspire-geoportal.ec.europa.eu/GeoportalProxyWebServices/resources/INSPIREResourceTester");

# --------------------------------------------
#INSPIRE Category, this is an ID of a mapbender custom_category which is used to identify inspire datasets - done so in germany
# --------------------------------------------
define("INSPIRE_CUSTOM_CAT_ID", "11");

# --------------------------------------------
#Exchange the DataURL element in the WMC with a link to the Download options from the SDI registry (data-service-coupling)
# --------------------------------------------

define("SHOW_INSPIRE_DOWNLOAD_IN_TREE", true);

# --------------------------------------------
# UPLOAD
# --------------------------------------------

define("UPLOAD_DIR", "../tmp");
define("UPLOAD_WHITELIST_FILE_TYPES", "xml,png,jpg,gml,pdf");
define("UPLOAD_BLACKLIST_FILE_TYPES", "");
define("UPLOAD_MAX_SIZE_KB", 2048);

# --------------------------------------------
# use jQuery from Google CDN
# --------------------------------------------
define("LOAD_JQUERY_FROM_GOOGLE", false);

# Activate APC variable cache if wished and installed
# class_map.php, frames/index.php, class_gui 
define("MAPBENDER_VARIABLE_CACHE", true);
define("MAPBENDER_CACHE_TYPE", "apc");

# define memcached server connections, if memcached is used for session storing
# lib/class_Mapbender_session.php
define("MEMCACHED_IP", "localhost");
define("MEMCACHED_PORT", "11211");

# --------------------------------------------
# define where to store temporary wmc documents (client configurations) when switching between applications. Needed if mb is integrated as iframe in external applications
# --------------------------------------------

define("TMP_WMC_SAVE_STORAGE", "file"); #memcached, memcache, #session - not yet implemented, file, cache (apc - thru class_cache.php - there is no possibility to delete those elements when using apc)

define("TMP_WMC_MAX_AGE", "2400"); # Max age in seconds for temporal wmc before it will be deleted by e.g. a cronjob or by memcached itself

# --------------------------------------------
# define where to store temporary search results from searchInterface.
# --------------------------------------------

define("TMP_SEARCH_RESULT_STORAGE", "cache"); #memcached, memcache, #session - not yet implemented, file, cache (apc - thru class_cache.php - there is no possibility to delete those elements when using apc) at this time 2015-06 only apc is possible for storing - there are some problems when using memcached!

define("TMP_SEARCH_RESULT_MAX_AGE", "2400"); # Max age in seconds for temporal results before they will be deleted by e.g. a cronjob or by memcached / apc itself

define("CACHE_TIME_WMS_LAYER", 120);

# --------------------------------------------
# Calculate bboxes for all supported SRS (Postgis needed)
# This module will compute bboxes for all srs which will be found in the service capabilities and which are defined
# in the array below. Normaly mapbender only uses bbox's which are given thru the service caps. In many use cases it is
# needfull to have more than one bbox given (e.g. metadata). The array is defined to supress the calculation of to many 
# srs like e.g. geoserver offers. The array should include all the srs which are used in the mapbender installation and 
# which are usefull for the special community for which the installation was done (local-sdi, INSPIRE, ...) 
# --------------------------------------------

define("SRS_ARRAY", "3034,4326,31466,31467,31468,25832,25833,4258,4839,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3857");
define("SRS_ARRAY_MAX_EXTENTS", "-180,-90,180,90|-10.6700,34.5000,31.5500,71.0500|5.1855468,46.8457031,15.46875,55.634765|5.1855468,46.8457031,15.46875,55.634765|5.1855468,46.8457031,15.46875,55.634765|5.1855468,46.8457031,15.46875,55.634765|-180,-90,180,90");

# --------------------------------------------
# define a public user
# --------------------------------------------
define("PUBLIC_USER", "2");

define("PUBLIC_USER_AUTO_CREATE_SESSION", true);
# set the default start gui for PUBLIC_USER - beware, that the user must have access to this gui!
define("PUBLIC_USER_DEFAULT_GUI", "Geoportal-SL");
# set the default srs for the PUBLIC_USER in the SESSION
define("PUBLIC_USER_DEFAULT_SRS", "EPSG:25832");

# --------------------------------------------
# define category for applications (guis) that are choosable by users as preferred gui
# --------------------------------------------
define("PREFERRED_GUI_CATEGORY", 2);

# define a public group
# This user is a typical anonymous group which has access on all freely 
#available services and datasets.
# Some functions of the portal framework not allowed for this group.
# --------------------------------------------
define("PUBLIC_GROUP", "37");
# --------------------------------------------
# define if mapbender is already integrated in new django portal
# --------------------------------------------
define("DJANGO_PORTAL", true);

# --------------------------------------------
# define a wrapper for index.php to use get api when integrated in external applications like cms
# if problems occure with this parameter -> Add "?" at the end of the value 
# --------------------------------------------
define("WRAPPER_PATH", "/map");

# --------------------------------------------
# user autocomplete
# --------------------------------------------
define('SEARCH_LIMIT', 50);
define('SEARCH_COLUMN1', 'mb_user_name');
define('SEARCH_COLUMN2', 'mb_user_email');

define('MAX_WMC_LOCAL_DATA_SIZE', 1024 * 1024);

###HACK for GLOBALS
$DBSERVER = DBSERVER;
$DB = DB;
$OWNER = OWNER;
$PW = PW;

define("PORTAL_ADMIN_USER_ID", "1");

# --------------------------------------------
# Spatial Security
# --------------------------------------------
define("SPATIAL_SECURITY", true);
# ROLETYPE can be user_group or gui
define("SPATIAL_SECURITY_ROLETYPE", "user_group");
# local address of a mapserver instance
define("MAPSERVER", "http" . "://" . "localhost" . "/cgi-bin/mapserv");

# --------------------------------------------
# INSPIRE Metadaten
# --------------------------------------------
define("INSPIRE_METADATA_SPEC", "2.0.1");

# --------------------------------------------
# Log access to OGC API Features proxy
# --------------------------------------------
# If set to true, the request to the OGC API Features Proxy 
# are logged to oaf_proxy_log table. They are only counted!
# 
define("OAF_LOG", false);

# --------------------------------------------
# Absolute path for downloading and processing gpkg files via python lib
# --------------------------------------------
define("GPKG_ABSOLUTE_DOWNLOAD_PATH", INSPIREDOWNLOADPATH);

# --------------------------------------------
# Absolute uri for accessing processed gpkg files
# --------------------------------------------
define("GPKG_ABSOLUTE_DOWNLOAD_URI", "https://".FULLY_QUALIFIED_DOMAIN_NAME."/inspiredownloads/");

# --------------------------------------------
# Max area for download of gpkg in squarekilometer
# --------------------------------------------
define("GPKG_AREA_LIMIT", "100");
